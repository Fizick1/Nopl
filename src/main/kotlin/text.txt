import org.apache.poi.xssf.streaming.SXSSFWorkbook
import java.io.File
import java.math.BigDecimal

fun main(args: Array<String>) {


    val testClass = TestClass("Jon", 23)
    val testClass2 = TestClass2("qwe", Pipl("kkk", 30.155))

    print(testClass)
    print(testClass2)

    println("close")
}


fun print(any: Any, fieldName: String ="", child: Boolean = false) {
    val ddd = any::class.java
    val dds = ddd.declaredFields
    val pref = if (child) "    " else ""
    val parName = if (child) fieldName else "Class name"
    println("$pref$parName = ${ddd.name}")

    dds.forEach {
        it.isAccessible = true
        val clas = it.get(any)

        when (clas) {
            is String -> println("    $pref${it.name}   =   $clas")
            is Int -> println("    $pref${it.name}   =   ${clas.toInt()}")
            is Double -> println("    $pref${it.name}   =   ${clas.toDouble()}")
            else -> {
                print(clas, it.name, true)
            }
        }
    }
    if (!child) println("\n\n")
}


data class TestClass(
        val name: String,
        val old: Int
)

data class Pipl(
        val person: String,
        val country: Double
//        val country : Pair<String,String>
)

data class TestClass2(
        val city: String,
        val pipl: Pipl
)